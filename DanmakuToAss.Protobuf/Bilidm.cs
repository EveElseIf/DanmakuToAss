// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bilidm.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DanmakuToAss.Protobuf {

  /// <summary>Holder for reflection information generated from bilidm.proto</summary>
  public static partial class BilidmReflection {

    #region Descriptor
    /// <summary>File descriptor for bilidm.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BilidmReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxiaWxpZG0ucHJvdG8iyAEKC0Rhbm1ha3VFbGVtEgoKAmlkGAEgASgDEhAK",
            "CHByb2dyZXNzGAIgASgFEgwKBG1vZGUYAyABKAUSEAoIZm9udHNpemUYBCAB",
            "KAUSDQoFY29sb3IYBSABKA0SDwoHbWlkSGFzaBgGIAEoCRIPCgdjb250ZW50",
            "GAcgASgJEg0KBWN0aW1lGAggASgDEg4KBndlaWdodBgJIAEoBRIOCgZhY3Rp",
            "b24YCiABKAkSDAoEcG9vbBgLIAEoBRINCgVpZFN0chgMIAEoCSIvChBEbVNl",
            "Z01vYmlsZVJlcGx5EhsKBWVsZW1zGAEgAygLMgwuRGFubWFrdUVsZW1CGKoC",
            "FURhbm1ha3VUb0Fzcy5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DanmakuToAss.Protobuf.DanmakuElem), global::DanmakuToAss.Protobuf.DanmakuElem.Parser, new[]{ "Id", "Progress", "Mode", "Fontsize", "Color", "MidHash", "Content", "Ctime", "Weight", "Action", "Pool", "IdStr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DanmakuToAss.Protobuf.DmSegMobileReply), global::DanmakuToAss.Protobuf.DmSegMobileReply.Parser, new[]{ "Elems" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DanmakuElem : pb::IMessage<DanmakuElem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DanmakuElem> _parser = new pb::MessageParser<DanmakuElem>(() => new DanmakuElem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DanmakuElem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DanmakuToAss.Protobuf.BilidmReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DanmakuElem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DanmakuElem(DanmakuElem other) : this() {
      id_ = other.id_;
      progress_ = other.progress_;
      mode_ = other.mode_;
      fontsize_ = other.fontsize_;
      color_ = other.color_;
      midHash_ = other.midHash_;
      content_ = other.content_;
      ctime_ = other.ctime_;
      weight_ = other.weight_;
      action_ = other.action_;
      pool_ = other.pool_;
      idStr_ = other.idStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DanmakuElem Clone() {
      return new DanmakuElem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    ///弹幕dmID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private int progress_;
    /// <summary>
    ///出现时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 3;
    private int mode_;
    /// <summary>
    ///弹幕类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "fontsize" field.</summary>
    public const int FontsizeFieldNumber = 4;
    private int fontsize_;
    /// <summary>
    ///文字大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Fontsize {
      get { return fontsize_; }
      set {
        fontsize_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 5;
    private uint color_;
    /// <summary>
    ///弹幕颜色
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "midHash" field.</summary>
    public const int MidHashFieldNumber = 6;
    private string midHash_ = "";
    /// <summary>
    ///发送者UID的HASH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MidHash {
      get { return midHash_; }
      set {
        midHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 7;
    private string content_ = "";
    /// <summary>
    ///弹幕内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ctime" field.</summary>
    public const int CtimeFieldNumber = 8;
    private long ctime_;
    /// <summary>
    ///发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Ctime {
      get { return ctime_; }
      set {
        ctime_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 9;
    private int weight_;
    /// <summary>
    ///权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 10;
    private string action_ = "";
    /// <summary>
    ///动作？
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pool" field.</summary>
    public const int PoolFieldNumber = 11;
    private int pool_;
    /// <summary>
    ///弹幕池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pool {
      get { return pool_; }
      set {
        pool_ = value;
      }
    }

    /// <summary>Field number for the "idStr" field.</summary>
    public const int IdStrFieldNumber = 12;
    private string idStr_ = "";
    /// <summary>
    ///弹幕dmID（字串形式）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdStr {
      get { return idStr_; }
      set {
        idStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DanmakuElem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DanmakuElem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Progress != other.Progress) return false;
      if (Mode != other.Mode) return false;
      if (Fontsize != other.Fontsize) return false;
      if (Color != other.Color) return false;
      if (MidHash != other.MidHash) return false;
      if (Content != other.Content) return false;
      if (Ctime != other.Ctime) return false;
      if (Weight != other.Weight) return false;
      if (Action != other.Action) return false;
      if (Pool != other.Pool) return false;
      if (IdStr != other.IdStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (Mode != 0) hash ^= Mode.GetHashCode();
      if (Fontsize != 0) hash ^= Fontsize.GetHashCode();
      if (Color != 0) hash ^= Color.GetHashCode();
      if (MidHash.Length != 0) hash ^= MidHash.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Ctime != 0L) hash ^= Ctime.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (Pool != 0) hash ^= Pool.GetHashCode();
      if (IdStr.Length != 0) hash ^= IdStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      if (Mode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Mode);
      }
      if (Fontsize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Fontsize);
      }
      if (Color != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Color);
      }
      if (MidHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MidHash);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Content);
      }
      if (Ctime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Ctime);
      }
      if (Weight != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Weight);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Action);
      }
      if (Pool != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Pool);
      }
      if (IdStr.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(IdStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      if (Mode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Mode);
      }
      if (Fontsize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Fontsize);
      }
      if (Color != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Color);
      }
      if (MidHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MidHash);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Content);
      }
      if (Ctime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Ctime);
      }
      if (Weight != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Weight);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Action);
      }
      if (Pool != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Pool);
      }
      if (IdStr.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(IdStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (Mode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mode);
      }
      if (Fontsize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fontsize);
      }
      if (Color != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Color);
      }
      if (MidHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MidHash);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Ctime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ctime);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (Pool != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pool);
      }
      if (IdStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DanmakuElem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      if (other.Mode != 0) {
        Mode = other.Mode;
      }
      if (other.Fontsize != 0) {
        Fontsize = other.Fontsize;
      }
      if (other.Color != 0) {
        Color = other.Color;
      }
      if (other.MidHash.Length != 0) {
        MidHash = other.MidHash;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Ctime != 0L) {
        Ctime = other.Ctime;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.Pool != 0) {
        Pool = other.Pool;
      }
      if (other.IdStr.Length != 0) {
        IdStr = other.IdStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
          case 24: {
            Mode = input.ReadInt32();
            break;
          }
          case 32: {
            Fontsize = input.ReadInt32();
            break;
          }
          case 40: {
            Color = input.ReadUInt32();
            break;
          }
          case 50: {
            MidHash = input.ReadString();
            break;
          }
          case 58: {
            Content = input.ReadString();
            break;
          }
          case 64: {
            Ctime = input.ReadInt64();
            break;
          }
          case 72: {
            Weight = input.ReadInt32();
            break;
          }
          case 82: {
            Action = input.ReadString();
            break;
          }
          case 88: {
            Pool = input.ReadInt32();
            break;
          }
          case 98: {
            IdStr = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
          case 24: {
            Mode = input.ReadInt32();
            break;
          }
          case 32: {
            Fontsize = input.ReadInt32();
            break;
          }
          case 40: {
            Color = input.ReadUInt32();
            break;
          }
          case 50: {
            MidHash = input.ReadString();
            break;
          }
          case 58: {
            Content = input.ReadString();
            break;
          }
          case 64: {
            Ctime = input.ReadInt64();
            break;
          }
          case 72: {
            Weight = input.ReadInt32();
            break;
          }
          case 82: {
            Action = input.ReadString();
            break;
          }
          case 88: {
            Pool = input.ReadInt32();
            break;
          }
          case 98: {
            IdStr = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DmSegMobileReply : pb::IMessage<DmSegMobileReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DmSegMobileReply> _parser = new pb::MessageParser<DmSegMobileReply>(() => new DmSegMobileReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DmSegMobileReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DanmakuToAss.Protobuf.BilidmReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DmSegMobileReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DmSegMobileReply(DmSegMobileReply other) : this() {
      elems_ = other.elems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DmSegMobileReply Clone() {
      return new DmSegMobileReply(this);
    }

    /// <summary>Field number for the "elems" field.</summary>
    public const int ElemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DanmakuToAss.Protobuf.DanmakuElem> _repeated_elems_codec
        = pb::FieldCodec.ForMessage(10, global::DanmakuToAss.Protobuf.DanmakuElem.Parser);
    private readonly pbc::RepeatedField<global::DanmakuToAss.Protobuf.DanmakuElem> elems_ = new pbc::RepeatedField<global::DanmakuToAss.Protobuf.DanmakuElem>();
    /// <summary>
    ///弹幕条目
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DanmakuToAss.Protobuf.DanmakuElem> Elems {
      get { return elems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DmSegMobileReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DmSegMobileReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elems_.Equals(other.elems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      elems_.WriteTo(output, _repeated_elems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      elems_.WriteTo(ref output, _repeated_elems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elems_.CalculateSize(_repeated_elems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DmSegMobileReply other) {
      if (other == null) {
        return;
      }
      elems_.Add(other.elems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elems_.AddEntriesFrom(input, _repeated_elems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            elems_.AddEntriesFrom(ref input, _repeated_elems_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
